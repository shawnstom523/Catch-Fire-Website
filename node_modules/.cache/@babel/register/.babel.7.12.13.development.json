{
  "{\"sourceRoot\":\"/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire\",\"filename\":\"/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/gulpfile.babel.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire\",\"plugins\":[],\"presets\":[]}:7.12.13": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire",
      "filename": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/gulpfile.babel.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/gulpfile.babel.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "/**\n * Gulpfile.\n *\n * Gulp with WordPress.\n *\n * Implements:\n *      1. Live reloads browser with BrowserSync.\n *      2. CSS: Sass to CSS conversion, error catching, Autoprefixing, Sourcemaps,\n *         CSS minification, and Merge Media Queries.\n *      3. JS: Concatenates & uglifies Vendor and Custom JS files.\n *      4. Images: Minifies PNG, JPEG, GIF and SVG images.\n *      5. Watches files for changes in CSS or JS.\n *      6. Watches files for changes in PHP.\n *      7. Corrects the line endings.\n *      8. InjectCSS instead of browser page reload.\n *      9. Generates .pot file for i18n and l10n.\n *\n * @tutorial https://github.com/ahmadawais/WPGulp\n * @author Ahmad Awais <https://twitter.com/MrAhmadAwais/>\n */\n\n/**\n * Load WPGulp Configuration.\n *\n * TODO: Customize your project in the wpgulp.js file.\n */\nconst config = require('./wpgulp.config.js');\n/**\n * Load Plugins.\n *\n * Load gulp plugins and passing them semantic names.\n */\n\n\nconst gulp = require('gulp'); // Gulp of-course.\n// CSS related plugins.\n\n\nconst sass = require('gulp-sass'); // Gulp plugin for Sass compilation.\n\n\nconst minifycss = require('gulp-uglifycss'); // Minifies CSS files.\n\n\nconst autoprefixer = require('gulp-autoprefixer'); // Autoprefixing magic.\n\n\nconst mmq = require('gulp-merge-media-queries'); // Combine matching media queries into one.\n\n\nconst rtlcss = require('gulp-rtlcss'); // Generates RTL stylesheet.\n// JS related plugins.\n\n\nconst concat = require('gulp-concat'); // Concatenates JS files.\n\n\nconst uglify = require('gulp-uglify'); // Minifies JS files.\n\n\nconst babel = require('gulp-babel'); // Compiles ESNext to browser compatible JS.\n// Image related plugins.\n\n\nconst imagemin = require('gulp-imagemin'); // Minify PNG, JPEG, GIF and SVG images with imagemin.\n// Utility related plugins.\n\n\nconst rename = require('gulp-rename'); // Renames files E.g. style.css -> style.min.css.\n\n\nconst lineec = require('gulp-line-ending-corrector'); // Consistent Line Endings for non UNIX systems. Gulp Plugin for Line Ending Corrector (A utility that makes sure your files have consistent line endings).\n\n\nconst filter = require('gulp-filter'); // Enables you to work on a subset of the original files by filtering them using a glob.\n\n\nconst sourcemaps = require('gulp-sourcemaps'); // Maps code in a compressed file (E.g. style.css) back to it’s original position in a source file (E.g. structure.scss, which was later combined with other css files to generate style.css).\n\n\nconst notify = require('gulp-notify'); // Sends message notification to you.\n\n\nconst browserSync = require('browser-sync').create(); // Reloads browser and injects CSS. Time-saving synchronized browser testing.\n\n\nconst wpPot = require('gulp-wp-pot'); // For generating the .pot file.\n\n\nconst sort = require('gulp-sort'); // Recommended to prevent unnecessary changes in pot-file.\n\n\nconst cache = require('gulp-cache'); // Cache files in stream for later use.\n\n\nconst remember = require('gulp-remember'); //  Adds all the files it has ever seen back into the stream.\n\n\nconst plumber = require('gulp-plumber'); // Prevent pipe breaking caused by errors from gulp plugins.\n\n\nconst beep = require('beepbeep');\n/**\n * Custom Error Handler.\n *\n * @param Mixed err\n */\n\n\nconst errorHandler = r => {\n  notify.onError('\\n\\n❌  ===> ERROR: <%= error.message %>\\n')(r);\n  beep(); // this.emit('end');\n};\n/**\n * Task: `browser-sync`.\n *\n * Live Reloads, CSS injections, Localhost tunneling.\n * @link http://www.browsersync.io/docs/options/\n *\n * @param {Mixed} done Done.\n */\n\n\nconst browsersync = done => {\n  browserSync.init({\n    proxy: config.projectURL,\n    open: config.browserAutoOpen,\n    injectChanges: config.injectChanges,\n    watchEvents: ['change', 'add', 'unlink', 'addDir', 'unlinkDir']\n  });\n  done();\n}; // Helper function to allow browser reload with Gulp 4.\n\n\nconst reload = done => {\n  browserSync.reload();\n  done();\n};\n/**\n * Task: `styles`.\n *\n * Compiles Sass, Autoprefixes it and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    3. Writes Sourcemaps for it\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix .min.css\n *    6. Minifies the CSS file and generates style.min.css\n *    7. Injects CSS or reloads the browser via browserSync\n */\n\n\ngulp.task('styles', () => {\n  return gulp.src(config.styleSRC, {\n    allowEmpty: true\n  }).pipe(plumber(errorHandler)).pipe(sourcemaps.init()).pipe(sass({\n    errLogToConsole: config.errLogToConsole,\n    outputStyle: config.outputStyle,\n    precision: config.precision\n  })).on('error', sass.logError).pipe(sourcemaps.write({\n    includeContent: false\n  })).pipe(sourcemaps.init({\n    loadMaps: true\n  })).pipe(autoprefixer(config.BROWSERS_LIST)).pipe(sourcemaps.write('./')).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(mmq({\n    log: true\n  })) // Merge Media Queries only for .min.css version.\n  .pipe(browserSync.stream()) // Reloads style.css if that is enqueued.\n  .pipe(rename({\n    suffix: '.min'\n  })).pipe(minifycss({\n    maxLineLen: 10\n  })).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(browserSync.stream()) // Reloads style.min.css if that is enqueued.\n  .pipe(notify({\n    message: '\\n\\n👊🏻  ===> Your Styles have been updated!!\\n',\n    onLast: true\n  }));\n});\n/**\n * Task: `stylesRTL`.\n *\n * Compiles Sass, Autoprefixes it, Generates RTL stylesheet, and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix -rtl and generates style-rtl.css\n *    6. Writes Sourcemaps for style-rtl.css\n *    7. Renames the CSS files with suffix .min.css\n *    8. Minifies the CSS file and generates style-rtl.min.css\n *    9. Injects CSS or reloads the browser via browserSync\n */\n\ngulp.task('stylesRTL', () => {\n  return gulp.src(config.styleSRC, {\n    allowEmpty: true\n  }).pipe(plumber(errorHandler)).pipe(sourcemaps.init()).pipe(sass({\n    errLogToConsole: config.errLogToConsole,\n    outputStyle: config.outputStyle,\n    precision: config.precision\n  })).on('error', sass.logError).pipe(sourcemaps.write({\n    includeContent: false\n  })).pipe(sourcemaps.init({\n    loadMaps: true\n  })).pipe(autoprefixer(config.BROWSERS_LIST)).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(rename({\n    suffix: '-rtl'\n  })) // Append \"-rtl\" to the filename.\n  .pipe(rtlcss()) // Convert to RTL.\n  .pipe(sourcemaps.write('./')) // Output sourcemap for style-rtl.css.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n  .pipe(mmq({\n    log: true\n  })) // Merge Media Queries only for .min.css version.\n  .pipe(rename({\n    suffix: '.min'\n  })).pipe(minifycss({\n    maxLineLen: 10\n  })).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.styleDestination)).pipe(filter('**/*.css')) // Filtering stream to only css files.\n  .pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n  .pipe(notify({\n    message: '\\n\\n✅  ===> STYLES RTL — completed!\\n',\n    onLast: true\n  }));\n});\n/**\n * Task: `vendorsJS`.\n *\n * Concatenate and uglify vendor JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS vendor files\n *     2. Concatenates all the files and generates vendors.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates vendors.min.js\n */\n\ngulp.task('vendorsJS', () => {\n  return gulp.src(config.jsVendorSRC, {\n    since: gulp.lastRun('vendorsJS')\n  }) // Only run on changed files.\n  .pipe(plumber(errorHandler)).pipe(babel({\n    presets: [['@babel/preset-env', // Preset to compile your modern JS to ES5.\n    {\n      targets: {\n        browsers: config.BROWSERS_LIST\n      } // Target browser list to support.\n\n    }]]\n  })).pipe(remember(config.jsVendorSRC)) // Bring all files back to stream.\n  .pipe(concat(config.jsVendorFile + '.js')).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsVendorDestination)).pipe(rename({\n    basename: config.jsVendorFile,\n    suffix: '.min'\n  })).pipe(uglify()).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsVendorDestination)).pipe(notify({\n    message: '\\n\\n✅  ===> VENDOR JS — completed!\\n',\n    onLast: true\n  }));\n});\n/**\n * Task: `customJS`.\n *\n * Concatenate and uglify custom JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS custom files\n *     2. Concatenates all the files and generates custom.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates custom.min.js\n */\n\ngulp.task('customJS', () => {\n  return gulp.src(config.jsCustomSRC, {\n    since: gulp.lastRun('customJS')\n  }) // Only run on changed files.\n  .pipe(plumber(errorHandler)).pipe(babel({\n    presets: [['@babel/preset-env', // Preset to compile your modern JS to ES5.\n    {\n      targets: {\n        browsers: config.BROWSERS_LIST\n      } // Target browser list to support.\n\n    }]]\n  })).pipe(remember(config.jsCustomSRC)) // Bring all files back to stream.\n  .pipe(concat(config.jsCustomFile + '.js')).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsCustomDestination)).pipe(rename({\n    basename: config.jsCustomFile,\n    suffix: '.min'\n  })).pipe(uglify()).pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n  .pipe(gulp.dest(config.jsCustomDestination)).pipe(notify({\n    message: '\\n\\n✅  ===> CUSTOM JS — completed!\\n',\n    onLast: true\n  }));\n});\n/**\n * Task: `images`.\n *\n * Minifies PNG, JPEG, GIF and SVG images.\n *\n * This task does the following:\n *     1. Gets the source of images raw folder\n *     2. Minifies PNG, JPEG, GIF and SVG images\n *     3. Generates and saves the optimized images\n *\n * This task will run only once, if you want to run it\n * again, do it with the command `gulp images`.\n *\n * Read the following to change these options.\n * @link https://github.com/sindresorhus/gulp-imagemin\n */\n\ngulp.task('images', () => {\n  return gulp.src(config.imgSRC).pipe(cache(imagemin([imagemin.gifsicle({\n    interlaced: true\n  }), imagemin.mozjpeg({\n    quality: 90,\n    progressive: true\n  }), imagemin.optipng({\n    optimizationLevel: 3\n  }), // 0-7 low-high.\n  imagemin.svgo({\n    plugins: [{\n      removeViewBox: true\n    }, {\n      cleanupIDs: false\n    }]\n  })]))).pipe(gulp.dest(config.imgDST)).pipe(notify({\n    message: '\\n\\n✅  ===> IMAGES — completed!\\n',\n    onLast: true\n  }));\n});\n/**\n * Task: `clear-images-cache`.\n *\n * Deletes the images cache. By running the next \"images\" task,\n * each image will be regenerated.\n */\n\ngulp.task('clearCache', function (done) {\n  return cache.clearAll(done);\n});\n/**\n * WP POT Translation File Generator.\n *\n * This task does the following:\n * 1. Gets the source of all the PHP files\n * 2. Sort files in stream by path or any custom sort comparator\n * 3. Applies wpPot with the variable set at the top of this file\n * 4. Generate a .pot file of i18n that can be used for l10n to build .mo file\n */\n\ngulp.task('translate', () => {\n  return gulp.src(config.watchPhp).pipe(sort()).pipe(wpPot({\n    domain: config.textDomain,\n    package: config.packageName,\n    bugReport: config.bugReport,\n    lastTranslator: config.lastTranslator,\n    team: config.team\n  })).pipe(gulp.dest(config.translationDestination + '/' + config.translationFile)).pipe(notify({\n    message: '\\n\\n✅  ===> TRANSLATE — completed!\\n',\n    onLast: true\n  }));\n});\n/**\n * Watch Tasks.\n *\n * Watches for file changes and runs specific tasks.\n */\n\ngulp.task('default', gulp.parallel('styles', 'vendorsJS', 'customJS', 'images', browsersync, () => {\n  gulp.watch(config.watchPhp, reload); // Reload on PHP file changes.\n\n  gulp.watch(config.watchStyles, gulp.parallel('styles')); // Reload on SCSS file changes.\n\n  gulp.watch(config.watchJsVendor, gulp.series('vendorsJS', reload)); // Reload on vendorsJS file changes.\n\n  gulp.watch(config.watchJsCustom, gulp.series('customJS', reload)); // Reload on customJS file changes.\n\n  gulp.watch(config.imgSRC, gulp.series('images', reload)); // Reload on customJS file changes.\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "config",
        "require",
        "gulp",
        "sass",
        "minifycss",
        "autoprefixer",
        "mmq",
        "rtlcss",
        "concat",
        "uglify",
        "babel",
        "imagemin",
        "rename",
        "lineec",
        "filter",
        "sourcemaps",
        "notify",
        "browserSync",
        "create",
        "wpPot",
        "sort",
        "cache",
        "remember",
        "plumber",
        "beep",
        "errorHandler",
        "r",
        "onError",
        "browsersync",
        "done",
        "init",
        "proxy",
        "projectURL",
        "open",
        "browserAutoOpen",
        "injectChanges",
        "watchEvents",
        "reload",
        "task",
        "src",
        "styleSRC",
        "allowEmpty",
        "pipe",
        "errLogToConsole",
        "outputStyle",
        "precision",
        "on",
        "logError",
        "write",
        "includeContent",
        "loadMaps",
        "BROWSERS_LIST",
        "dest",
        "styleDestination",
        "log",
        "stream",
        "suffix",
        "maxLineLen",
        "message",
        "onLast",
        "jsVendorSRC",
        "since",
        "lastRun",
        "presets",
        "targets",
        "browsers",
        "jsVendorFile",
        "jsVendorDestination",
        "basename",
        "jsCustomSRC",
        "jsCustomFile",
        "jsCustomDestination",
        "imgSRC",
        "gifsicle",
        "interlaced",
        "mozjpeg",
        "quality",
        "progressive",
        "optipng",
        "optimizationLevel",
        "svgo",
        "plugins",
        "removeViewBox",
        "cleanupIDs",
        "imgDST",
        "clearAll",
        "watchPhp",
        "domain",
        "textDomain",
        "package",
        "packageName",
        "bugReport",
        "lastTranslator",
        "team",
        "translationDestination",
        "translationFile",
        "parallel",
        "watch",
        "watchStyles",
        "watchJsVendor",
        "series",
        "watchJsCustom"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/",
      "sourcesContent": [
        "/**\n * Gulpfile.\n *\n * Gulp with WordPress.\n *\n * Implements:\n *      1. Live reloads browser with BrowserSync.\n *      2. CSS: Sass to CSS conversion, error catching, Autoprefixing, Sourcemaps,\n *         CSS minification, and Merge Media Queries.\n *      3. JS: Concatenates & uglifies Vendor and Custom JS files.\n *      4. Images: Minifies PNG, JPEG, GIF and SVG images.\n *      5. Watches files for changes in CSS or JS.\n *      6. Watches files for changes in PHP.\n *      7. Corrects the line endings.\n *      8. InjectCSS instead of browser page reload.\n *      9. Generates .pot file for i18n and l10n.\n *\n * @tutorial https://github.com/ahmadawais/WPGulp\n * @author Ahmad Awais <https://twitter.com/MrAhmadAwais/>\n */\n\n/**\n * Load WPGulp Configuration.\n *\n * TODO: Customize your project in the wpgulp.js file.\n */\nconst config = require('./wpgulp.config.js');\n\n/**\n * Load Plugins.\n *\n * Load gulp plugins and passing them semantic names.\n */\nconst gulp = require('gulp'); // Gulp of-course.\n\n// CSS related plugins.\nconst sass = require('gulp-sass'); // Gulp plugin for Sass compilation.\nconst minifycss = require('gulp-uglifycss'); // Minifies CSS files.\nconst autoprefixer = require('gulp-autoprefixer'); // Autoprefixing magic.\nconst mmq = require('gulp-merge-media-queries'); // Combine matching media queries into one.\nconst rtlcss = require('gulp-rtlcss'); // Generates RTL stylesheet.\n\n// JS related plugins.\nconst concat = require('gulp-concat'); // Concatenates JS files.\nconst uglify = require('gulp-uglify'); // Minifies JS files.\nconst babel = require('gulp-babel'); // Compiles ESNext to browser compatible JS.\n\n// Image related plugins.\nconst imagemin = require('gulp-imagemin'); // Minify PNG, JPEG, GIF and SVG images with imagemin.\n\n// Utility related plugins.\nconst rename = require('gulp-rename'); // Renames files E.g. style.css -> style.min.css.\nconst lineec = require('gulp-line-ending-corrector'); // Consistent Line Endings for non UNIX systems. Gulp Plugin for Line Ending Corrector (A utility that makes sure your files have consistent line endings).\nconst filter = require('gulp-filter'); // Enables you to work on a subset of the original files by filtering them using a glob.\nconst sourcemaps = require('gulp-sourcemaps'); // Maps code in a compressed file (E.g. style.css) back to it’s original position in a source file (E.g. structure.scss, which was later combined with other css files to generate style.css).\nconst notify = require('gulp-notify'); // Sends message notification to you.\nconst browserSync = require('browser-sync').create(); // Reloads browser and injects CSS. Time-saving synchronized browser testing.\nconst wpPot = require('gulp-wp-pot'); // For generating the .pot file.\nconst sort = require('gulp-sort'); // Recommended to prevent unnecessary changes in pot-file.\nconst cache = require('gulp-cache'); // Cache files in stream for later use.\nconst remember = require('gulp-remember'); //  Adds all the files it has ever seen back into the stream.\nconst plumber = require('gulp-plumber'); // Prevent pipe breaking caused by errors from gulp plugins.\nconst beep = require('beepbeep');\n\n/**\n * Custom Error Handler.\n *\n * @param Mixed err\n */\nconst errorHandler = r => {\n\tnotify.onError('\\n\\n❌  ===> ERROR: <%= error.message %>\\n')(r);\n\tbeep();\n\n\t// this.emit('end');\n};\n\n/**\n * Task: `browser-sync`.\n *\n * Live Reloads, CSS injections, Localhost tunneling.\n * @link http://www.browsersync.io/docs/options/\n *\n * @param {Mixed} done Done.\n */\nconst browsersync = done => {\n\tbrowserSync.init({\n\t\tproxy: config.projectURL,\n\t\topen: config.browserAutoOpen,\n\t\tinjectChanges: config.injectChanges,\n\t\twatchEvents: ['change', 'add', 'unlink', 'addDir', 'unlinkDir']\n\t});\n\tdone();\n};\n\n// Helper function to allow browser reload with Gulp 4.\nconst reload = done => {\n\tbrowserSync.reload();\n\tdone();\n};\n\n/**\n * Task: `styles`.\n *\n * Compiles Sass, Autoprefixes it and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    3. Writes Sourcemaps for it\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix .min.css\n *    6. Minifies the CSS file and generates style.min.css\n *    7. Injects CSS or reloads the browser via browserSync\n */\ngulp.task('styles', () => {\n\treturn gulp\n\t\t.src(config.styleSRC, {\n\t\t\tallowEmpty: true\n\t\t})\n\t\t.pipe(plumber(errorHandler))\n\t\t.pipe(sourcemaps.init())\n\t\t.pipe(\n\t\t\tsass({\n\t\t\t\terrLogToConsole: config.errLogToConsole,\n\t\t\t\toutputStyle: config.outputStyle,\n\t\t\t\tprecision: config.precision\n\t\t\t})\n\t\t)\n\t\t.on('error', sass.logError)\n\t\t.pipe(sourcemaps.write({\n\t\t\tincludeContent: false\n\t\t}))\n\t\t.pipe(sourcemaps.init({\n\t\t\tloadMaps: true\n\t\t}))\n\t\t.pipe(autoprefixer(config.BROWSERS_LIST))\n\t\t.pipe(sourcemaps.write('./'))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.styleDestination))\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\n\t\t.pipe(mmq({\n\t\t\tlog: true\n\t\t})) // Merge Media Queries only for .min.css version.\n\t\t.pipe(browserSync.stream()) // Reloads style.css if that is enqueued.\n\t\t.pipe(rename({\n\t\t\tsuffix: '.min'\n\t\t}))\n\t\t.pipe(minifycss({\n\t\t\tmaxLineLen: 10\n\t\t}))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.styleDestination))\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\n\t\t.pipe(browserSync.stream()) // Reloads style.min.css if that is enqueued.\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\tmessage: '\\n\\n👊🏻  ===> Your Styles have been updated!!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n});\n\n/**\n * Task: `stylesRTL`.\n *\n * Compiles Sass, Autoprefixes it, Generates RTL stylesheet, and Minifies CSS.\n *\n * This task does the following:\n *    1. Gets the source scss file\n *    2. Compiles Sass to CSS\n *    4. Autoprefixes it and generates style.css\n *    5. Renames the CSS file with suffix -rtl and generates style-rtl.css\n *    6. Writes Sourcemaps for style-rtl.css\n *    7. Renames the CSS files with suffix .min.css\n *    8. Minifies the CSS file and generates style-rtl.min.css\n *    9. Injects CSS or reloads the browser via browserSync\n */\ngulp.task('stylesRTL', () => {\n\treturn gulp\n\t\t.src(config.styleSRC, {\n\t\t\tallowEmpty: true\n\t\t})\n\t\t.pipe(plumber(errorHandler))\n\t\t.pipe(sourcemaps.init())\n\t\t.pipe(\n\t\t\tsass({\n\t\t\t\terrLogToConsole: config.errLogToConsole,\n\t\t\t\toutputStyle: config.outputStyle,\n\t\t\t\tprecision: config.precision\n\t\t\t})\n\t\t)\n\t\t.on('error', sass.logError)\n\t\t.pipe(sourcemaps.write({\n\t\t\tincludeContent: false\n\t\t}))\n\t\t.pipe(sourcemaps.init({\n\t\t\tloadMaps: true\n\t\t}))\n\t\t.pipe(autoprefixer(config.BROWSERS_LIST))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(rename({\n\t\t\tsuffix: '-rtl'\n\t\t})) // Append \"-rtl\" to the filename.\n\t\t.pipe(rtlcss()) // Convert to RTL.\n\t\t.pipe(sourcemaps.write('./')) // Output sourcemap for style-rtl.css.\n\t\t.pipe(gulp.dest(config.styleDestination))\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\n\t\t.pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n\t\t.pipe(mmq({\n\t\t\tlog: true\n\t\t})) // Merge Media Queries only for .min.css version.\n\t\t.pipe(rename({\n\t\t\tsuffix: '.min'\n\t\t}))\n\t\t.pipe(minifycss({\n\t\t\tmaxLineLen: 10\n\t\t}))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.styleDestination))\n\t\t.pipe(filter('**/*.css')) // Filtering stream to only css files.\n\t\t.pipe(browserSync.stream()) // Reloads style.css or style-rtl.css, if that is enqueued.\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\tmessage: '\\n\\n✅  ===> STYLES RTL — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n});\n\n/**\n * Task: `vendorsJS`.\n *\n * Concatenate and uglify vendor JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS vendor files\n *     2. Concatenates all the files and generates vendors.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates vendors.min.js\n */\ngulp.task('vendorsJS', () => {\n\treturn gulp\n\t\t.src(config.jsVendorSRC, {\n\t\t\tsince: gulp.lastRun('vendorsJS')\n\t\t}) // Only run on changed files.\n\t\t.pipe(plumber(errorHandler))\n\t\t.pipe(\n\t\t\tbabel({\n\t\t\t\tpresets: [\n\t\t\t\t\t[\n\t\t\t\t\t\t'@babel/preset-env', // Preset to compile your modern JS to ES5.\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttargets: {\n\t\t\t\t\t\t\t\tbrowsers: config.BROWSERS_LIST\n\t\t\t\t\t\t\t} // Target browser list to support.\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t})\n\t\t)\n\t\t.pipe(remember(config.jsVendorSRC)) // Bring all files back to stream.\n\t\t.pipe(concat(config.jsVendorFile + '.js'))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.jsVendorDestination))\n\t\t.pipe(\n\t\t\trename({\n\t\t\t\tbasename: config.jsVendorFile,\n\t\t\t\tsuffix: '.min'\n\t\t\t})\n\t\t)\n\t\t.pipe(uglify())\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.jsVendorDestination))\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\tmessage: '\\n\\n✅  ===> VENDOR JS — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n});\n\n/**\n * Task: `customJS`.\n *\n * Concatenate and uglify custom JS scripts.\n *\n * This task does the following:\n *     1. Gets the source folder for JS custom files\n *     2. Concatenates all the files and generates custom.js\n *     3. Renames the JS file with suffix .min.js\n *     4. Uglifes/Minifies the JS file and generates custom.min.js\n */\ngulp.task('customJS', () => {\n\treturn gulp\n\t\t.src(config.jsCustomSRC, {\n\t\t\tsince: gulp.lastRun('customJS')\n\t\t}) // Only run on changed files.\n\t\t.pipe(plumber(errorHandler))\n\t\t.pipe(\n\t\t\tbabel({\n\t\t\t\tpresets: [\n\t\t\t\t\t[\n\t\t\t\t\t\t'@babel/preset-env', // Preset to compile your modern JS to ES5.\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttargets: {\n\t\t\t\t\t\t\t\tbrowsers: config.BROWSERS_LIST\n\t\t\t\t\t\t\t} // Target browser list to support.\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t})\n\t\t)\n\t\t.pipe(remember(config.jsCustomSRC)) // Bring all files back to stream.\n\t\t.pipe(concat(config.jsCustomFile + '.js'))\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.jsCustomDestination))\n\t\t.pipe(\n\t\t\trename({\n\t\t\t\tbasename: config.jsCustomFile,\n\t\t\t\tsuffix: '.min'\n\t\t\t})\n\t\t)\n\t\t.pipe(uglify())\n\t\t.pipe(lineec()) // Consistent Line Endings for non UNIX systems.\n\t\t.pipe(gulp.dest(config.jsCustomDestination))\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\tmessage: '\\n\\n✅  ===> CUSTOM JS — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n});\n\n/**\n * Task: `images`.\n *\n * Minifies PNG, JPEG, GIF and SVG images.\n *\n * This task does the following:\n *     1. Gets the source of images raw folder\n *     2. Minifies PNG, JPEG, GIF and SVG images\n *     3. Generates and saves the optimized images\n *\n * This task will run only once, if you want to run it\n * again, do it with the command `gulp images`.\n *\n * Read the following to change these options.\n * @link https://github.com/sindresorhus/gulp-imagemin\n */\ngulp.task('images', () => {\n\treturn gulp\n\t\t.src(config.imgSRC)\n\t\t.pipe(\n\t\t\tcache(\n\t\t\t\timagemin([\n\t\t\t\t\timagemin.gifsicle({\n\t\t\t\t\t\tinterlaced: true\n\t\t\t\t\t}),\n\t\t\t\t\timagemin.mozjpeg({\n\t\t\t\t\t\tquality: 90,\n\t\t\t\t\t\tprogressive: true\n\t\t\t\t\t}),\n\t\t\t\t\timagemin.optipng({\n\t\t\t\t\t\toptimizationLevel: 3\n\t\t\t\t\t}), // 0-7 low-high.\n\t\t\t\t\timagemin.svgo({\n\t\t\t\t\t\tplugins: [{\n\t\t\t\t\t\t\tremoveViewBox: true\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tcleanupIDs: false\n\t\t\t\t\t\t}]\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t)\n\t\t)\n\t\t.pipe(gulp.dest(config.imgDST))\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\tmessage: '\\n\\n✅  ===> IMAGES — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n});\n\n/**\n * Task: `clear-images-cache`.\n *\n * Deletes the images cache. By running the next \"images\" task,\n * each image will be regenerated.\n */\ngulp.task('clearCache', function (done) {\n\treturn cache.clearAll(done);\n});\n\n/**\n * WP POT Translation File Generator.\n *\n * This task does the following:\n * 1. Gets the source of all the PHP files\n * 2. Sort files in stream by path or any custom sort comparator\n * 3. Applies wpPot with the variable set at the top of this file\n * 4. Generate a .pot file of i18n that can be used for l10n to build .mo file\n */\ngulp.task('translate', () => {\n\treturn gulp\n\t\t.src(config.watchPhp)\n\t\t.pipe(sort())\n\t\t.pipe(\n\t\t\twpPot({\n\t\t\t\tdomain: config.textDomain,\n\t\t\t\tpackage: config.packageName,\n\t\t\t\tbugReport: config.bugReport,\n\t\t\t\tlastTranslator: config.lastTranslator,\n\t\t\t\tteam: config.team\n\t\t\t})\n\t\t)\n\t\t.pipe(gulp.dest(config.translationDestination + '/' + config.translationFile))\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\tmessage: '\\n\\n✅  ===> TRANSLATE — completed!\\n',\n\t\t\t\tonLast: true\n\t\t\t})\n\t\t);\n});\n\n/**\n * Watch Tasks.\n *\n * Watches for file changes and runs specific tasks.\n */\ngulp.task(\n\t'default',\n\tgulp.parallel('styles', 'vendorsJS', 'customJS', 'images', browsersync, () => {\n\t\tgulp.watch(config.watchPhp, reload); // Reload on PHP file changes.\n\t\tgulp.watch(config.watchStyles, gulp.parallel('styles')); // Reload on SCSS file changes.\n\t\tgulp.watch(config.watchJsVendor, gulp.series('vendorsJS', reload)); // Reload on vendorsJS file changes.\n\t\tgulp.watch(config.watchJsCustom, gulp.series('customJS', reload)); // Reload on customJS file changes.\n\t\tgulp.watch(config.imgSRC, gulp.series('images', reload)); // Reload on customJS file changes.\n\t})\n);"
      ]
    },
    "sourceType": "module",
    "mtime": 1612456839000
  },
  "{\"sourceRoot\":\"/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire\",\"filename\":\"/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/wpgulp.config.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire\",\"plugins\":[],\"presets\":[]}:7.12.13": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire",
      "filename": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/wpgulp.config.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/wpgulp.config.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/wpgulp.config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/",
        "sourceFileName": "wpgulp.config.js"
      }
    },
    "ast": null,
    "code": "/**\n * WPGulp Configuration File\n *\n * 1. Edit the variables as per your project requirements.\n * 2. In paths you can add <<glob or array of globs>>.\n *\n * @package WPGulp\n */\n// Project options.\n// Local project URL of your already running WordPress site.\n// > Could be something like \"wpgulp.local\" or \"localhost\"\n// > depending upon your local WordPress setup.\nconst projectURL = 'localhost:10033'; // Theme/Plugin URL. Leave it like it is; since our gulpfile.js lives in the root folder.\n\nconst productURL = './';\nconst browserAutoOpen = false;\nconst injectChanges = true; // >>>>> Style options.\n// Path to main .scss file.\n\nconst styleSRC = './scss/main.scss'; // Path to place the compiled CSS file. Default set to root folder.\n\nconst styleDestination = './css/'; // Available options → 'compact' or 'compressed' or 'nested' or 'expanded'\n\nconst outputStyle = 'expanded';\nconst errLogToConsole = true;\nconst precision = 10; // JS Vendor options.\n// Path to JS vendor folder.\n\nconst jsVendorSRC = './assets/js/vendor/*.js'; // Path to place the compiled JS vendors file.\n\nconst jsVendorDestination = './assets/js/'; // Compiled JS vendors file name. Default set to vendors i.e. vendors.js.\n\nconst jsVendorFile = 'vendor'; // JS Custom options.\n// Path to JS custom scripts folder.\n\nconst jsCustomSRC = './assets/js/custom/*.js'; // Path to place the compiled JS custom scripts file.\n\nconst jsCustomDestination = './assets/js/'; // Compiled JS custom file name. Default set to custom i.e. custom.js.\n\nconst jsCustomFile = 'custom'; // Images options.\n// Source folder of images which should be optimized and watched.\n// > You can also specify types e.g. raw/**.{png,jpg,gif} in the glob.\n\nconst imgSRC = './assets/img/raw/**/*'; // Destination folder of optimized images.\n// > Must be different from the imagesSRC folder.\n\nconst imgDST = './assets/img/'; // >>>>> Watch files paths.\n// Path to all *.scss files inside css folder and inside them.\n\nconst watchStyles = './scss/**'; // Path to all vendor JS files.\n\nconst watchJsVendor = './assets/js/vendor/*.js'; // Path to all custom JS files.\n\nconst watchJsCustom = './assets/js/custom/*.js'; // Path to all PHP files.\n\nconst watchPhp = './**/*.php'; // >>>>> Zip file config.\n// Must have.zip at the end.\n\nconst zipName = 'theme.zip'; // Must be a folder outside of the zip folder.\n\nconst zipDestination = './../'; // Default: Parent folder.\n\nconst zipIncludeGlob = ['./**/*']; // Default: Include all files/folders in current directory.\n// Default ignored files and folders for the zip file.\n\nconst zipIgnoreGlob = ['!./{node_modules,node_modules/**/*}', '!./.git', '!./.svn', '!./gulpfile.babel.js', '!./wpgulp.config.js', '!./.eslintrc.js', '!./.eslintignore', '!./.editorconfig', '!./phpcs.xml.dist', '!./vscode', '!./package.json', '!./package-lock.json', '!./assets/css/**/*', '!./assets/css', '!./assets/img/raw/**/*', '!./assets/img/raw', `!${imgSRC}`, `!${styleSRC}`, `!${jsCustomSRC}`, `!${jsVendorSRC}`]; // >>>>> Translation options.\n// Your text domain here.\n\nconst textDomain = 'WPGULP'; // Name of the translation file.\n\nconst translationFile = 'WPGULP.pot'; // Where to save the translation files.\n\nconst translationDestination = './languages'; // Package name.\n\nconst packageName = 'WPGULP'; // Where can users report bugs.\n\nconst bugReport = 'https://AhmadAwais.com/contact/'; // Last translator Email ID.\n\nconst lastTranslator = 'Ahmad Awais <your_email@email.com>'; // Team's Email ID.\n\nconst team = 'AhmadAwais <your_email@email.com>'; // Browsers you care about for auto-prefixing. Browserlist https://github.com/ai/browserslist\n// The following list is set as per WordPress requirements. Though; Feel free to change.\n\nconst BROWSERS_LIST = ['last 2 version', '> 1%']; // Export.\n\nmodule.exports = {\n  projectURL,\n  productURL,\n  browserAutoOpen,\n  injectChanges,\n  styleSRC,\n  styleDestination,\n  outputStyle,\n  errLogToConsole,\n  precision,\n  jsVendorSRC,\n  jsVendorDestination,\n  jsVendorFile,\n  jsCustomSRC,\n  jsCustomDestination,\n  jsCustomFile,\n  imgSRC,\n  imgDST,\n  watchStyles,\n  watchJsVendor,\n  watchJsCustom,\n  watchPhp,\n  zipName,\n  zipDestination,\n  zipIncludeGlob,\n  zipIgnoreGlob,\n  textDomain,\n  translationFile,\n  translationDestination,\n  packageName,\n  bugReport,\n  lastTranslator,\n  team,\n  BROWSERS_LIST\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndwZ3VscC5jb25maWcuanMiXSwibmFtZXMiOlsicHJvamVjdFVSTCIsInByb2R1Y3RVUkwiLCJicm93c2VyQXV0b09wZW4iLCJpbmplY3RDaGFuZ2VzIiwic3R5bGVTUkMiLCJzdHlsZURlc3RpbmF0aW9uIiwib3V0cHV0U3R5bGUiLCJlcnJMb2dUb0NvbnNvbGUiLCJwcmVjaXNpb24iLCJqc1ZlbmRvclNSQyIsImpzVmVuZG9yRGVzdGluYXRpb24iLCJqc1ZlbmRvckZpbGUiLCJqc0N1c3RvbVNSQyIsImpzQ3VzdG9tRGVzdGluYXRpb24iLCJqc0N1c3RvbUZpbGUiLCJpbWdTUkMiLCJpbWdEU1QiLCJ3YXRjaFN0eWxlcyIsIndhdGNoSnNWZW5kb3IiLCJ3YXRjaEpzQ3VzdG9tIiwid2F0Y2hQaHAiLCJ6aXBOYW1lIiwiemlwRGVzdGluYXRpb24iLCJ6aXBJbmNsdWRlR2xvYiIsInppcElnbm9yZUdsb2IiLCJ0ZXh0RG9tYWluIiwidHJhbnNsYXRpb25GaWxlIiwidHJhbnNsYXRpb25EZXN0aW5hdGlvbiIsInBhY2thZ2VOYW1lIiwiYnVnUmVwb3J0IiwibGFzdFRyYW5zbGF0b3IiLCJ0ZWFtIiwiQlJPV1NFUlNfTElTVCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU1BLFVBQVUsR0FBRyxpQkFBbkIsQyxDQUVBOztBQUNBLE1BQU1DLFVBQVUsR0FBRyxJQUFuQjtBQUNBLE1BQU1DLGVBQWUsR0FBRyxLQUF4QjtBQUNBLE1BQU1DLGFBQWEsR0FBRyxJQUF0QixDLENBRUE7QUFDQTs7QUFDQSxNQUFNQyxRQUFRLEdBQUcsa0JBQWpCLEMsQ0FFQTs7QUFDQSxNQUFNQyxnQkFBZ0IsR0FBRyxRQUF6QixDLENBRUE7O0FBQ0EsTUFBTUMsV0FBVyxHQUFHLFVBQXBCO0FBQ0EsTUFBTUMsZUFBZSxHQUFHLElBQXhCO0FBQ0Es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QTBCaEJDLEVBQUFBLFVBMUJnQjtBQTJCaEJDLEVBQUFBLGVBM0JnQjtBQTRCaEJDLEVBQUFBLHNCQTVCZ0I7QUE2QmhCQyxFQUFBQSxXQTdCZ0I7QUE4QmhCQyxFQUFBQSxTQTlCZ0I7QUErQmhCQyxFQUFBQSxjQS9CZ0I7QUFnQ2hCQyxFQUFBQSxJQWhDZ0I7QUFpQ2hCQyxFQUFBQTtBQWpDZ0IsQ0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3NoYXduc3RvbS9Mb2NhbCBTaXRlcy9jYXRjaC1maXJlL2FwcC9wdWJsaWMvd3AtY29udGVudC90aGVtZXMvY2F0Y2gtZmlyZS8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFdQR3VscCBDb25maWd1cmF0aW9uIEZpbGVcbiAqXG4gKiAxLiBFZGl0IHRoZSB2YXJpYWJsZXMgYXMgcGVyIHlvdXIgcHJvamVjdCByZXF1aXJlbWVudHMuXG4gKiAyLiBJbiBwYXRocyB5b3UgY2FuIGFkZCA8PGdsb2Igb3IgYXJyYXkgb2YgZ2xvYnM+Pi5cbiAqXG4gKiBAcGFja2FnZSBXUEd1bHBcbiAqL1xuXG4vLyBQcm9qZWN0IG9wdGlvbnMuXG5cbi8vIExvY2FsIHByb2plY3QgVVJMIG9mIHlvdXIgYWxyZWFkeSBydW5uaW5nIFdvcmRQcmVzcyBzaXRlLlxuLy8gPiBDb3VsZCBiZSBzb21ldGhpbmcgbGlrZSBcIndwZ3VscC5sb2NhbFwiIG9yIFwibG9jYWxob3N0XCJcbi8vID4gZGVwZW5kaW5nIHVwb24geW91ciBsb2NhbCBXb3JkUHJlc3Mgc2V0dXAuXG5jb25zdCBwcm9qZWN0VVJMID0gJ2xvY2FsaG9zdDoxMDAzMyc7XG5cbi8vIFRoZW1lL1BsdWdpbiBVUkwuIExlYXZlIGl0IGxpa2UgaXQgaXM7IHNpbmNlIG91ciBndWxwZmlsZS5qcyBsaXZlcyBpbiB0aGUgcm9vdCBmb2xkZXIuXG5jb25zdCBwcm9kdWN0VVJMID0gJy4vJztcbmNvbnN0IGJyb3dzZXJBdXRvT3BlbiA9IGZhbHNlO1xuY29uc3QgaW5qZWN0Q2hhbmdlcyA9IHRydWU7XG5cbi8vID4+Pj4+IFN0eWxlIG9wdGlvbnMuXG4vLyBQYXRoIHRvIG1haW4gLnNjc3MgZmlsZS5cbmNvbnN0IHN0eWxlU1JDID0gJy4vc2Nzcy9tYWluLnNjc3MnO1xuXG4vLyBQYXRoIHRvIHBsYWNlIHRoZSBjb21waWxlZCBDU1MgZmlsZS4gRGVmYXVsdCBzZXQgdG8gcm9vdCBmb2xkZXIuXG5jb25zdCBzdHlsZURlc3RpbmF0aW9uID0gJy4vY3NzLyc7XG5cbi8vIEF2YWlsYWJsZSBvcHRpb25zIOKGkiAnY29tcGFjdCcgb3IgJ2NvbXByZXNzZWQnIG9yICduZXN0ZWQnIG9yICdleHBhbmRlZCdcbmNvbnN0IG91dHB1dFN0eWxlID0gJ2V4cGFuZGVkJztcbmNvbnN0IGVyckxvZ1RvQ29uc29sZSA9IHRydWU7XG5jb25zdCBwcmVjaXNpb24gPSAxMDtcblxuLy8gSlMgVmVuZG9yIG9wdGlvbnMuXG5cbi8vIFBhdGggdG8gSlMgdmVuZG9yIGZvbGRlci5cbmNvbnN0IGpzVmVuZG9yU1JDID0gJy4vYXNzZXRzL2pzL3ZlbmRvci8qLmpzJztcblxuLy8gUGF0aCB0byBwbGFjZSB0aGUgY29tcGlsZWQgSlMgdmVuZG9ycyBmaWxlLlxuY29uc3QganNWZW5kb3JEZXN0aW5hdGlvbiA9ICcuL2Fzc2V0cy9qcy8nO1xuXG4vLyBDb21waWxlZCBKUyB2ZW5kb3JzIGZpbGUgbmFtZS4gRGVmYXVsdCBzZXQgdG8gdmVuZG9ycyBpLmUuIHZlbmRvcnMuanMuXG5jb25zdCBqc1ZlbmRvckZpbGUgPSAndmVuZG9yJztcblxuLy8gSlMgQ3VzdG9tIG9wdGlvbnMuXG5cbi8vIFBhdGggdG8gSlMgY3VzdG9tIHNjcmlwdHMgZm9sZGVyLlxuY29uc3QganNDdXN0b21TUkMgPSAnLi9hc3NldHMvanMvY3VzdG9tLyouanMnO1xuXG4vLyBQYXRoIHRvIHBsYWNlIHRoZSBjb21waWxlZCBKUyBjdXN0b20gc2NyaXB0cyBmaWxlLlxuY29uc3QganNDdXN0b21EZXN0aW5hdGlvbiA9ICcuL2Fzc2V0cy9qcy8nO1xuXG4vLyBDb21waWxlZCBKUyBjdXN0b20gZmlsZSBuYW1lLiBEZWZhdWx0IHNldCB0byBjdXN0b20gaS5lLiBjdXN0b20uanMuXG5jb25zdCBqc0N1c3RvbUZpbGUgPSAnY3VzdG9tJztcblxuLy8gSW1hZ2VzIG9wdGlvbnMuXG5cbi8vIFNvdXJjZSBmb2xkZXIgb2YgaW1hZ2VzIHdoaWNoIHNob3VsZCBiZSBvcHRpbWl6ZWQgYW5kIHdhdGNoZWQuXG4vLyA+IFlvdSBjYW4gYWxzbyBzcGVjaWZ5IHR5cGVzIGUuZy4gcmF3LyoqLntwbmcsanBnLGdpZn0gaW4gdGhlIGdsb2IuXG5jb25zdCBpbWdTUkMgPSAnLi9hc3NldHMvaW1nL3Jhdy8qKi8qJztcblxuLy8gRGVzdGluYXRpb24gZm9sZGVyIG9mIG9wdGltaXplZCBpbWFnZXMuXG4vLyA+IE11c3QgYmUgZGlmZmVyZW50IGZyb20gdGhlIGltYWdlc1NSQyBmb2xkZXIuXG5jb25zdCBpbWdEU1QgPSAnLi9hc3NldHMvaW1nLyc7XG5cbi8vID4+Pj4+IFdhdGNoIGZpbGVzIHBhdGhzLlxuLy8gUGF0aCB0byBhbGwgKi5zY3NzIGZpbGVzIGluc2lkZSBjc3MgZm9sZGVyIGFuZCBpbnNpZGUgdGhlbS5cbmNvbnN0IHdhdGNoU3R5bGVzID0gJy4vc2Nzcy8qKic7XG5cbi8vIFBhdGggdG8gYWxsIHZlbmRvciBKUyBmaWxlcy5cbmNvbnN0IHdhdGNoSnNWZW5kb3IgPSAnLi9hc3NldHMvanMvdmVuZG9yLyouanMnO1xuXG4vLyBQYXRoIHRvIGFsbCBjdXN0b20gSlMgZmlsZXMuXG5jb25zdCB3YXRjaEpzQ3VzdG9tID0gJy4vYXNzZXRzL2pzL2N1c3RvbS8qLmpzJztcblxuLy8gUGF0aCB0byBhbGwgUEhQIGZpbGVzLlxuY29uc3Qgd2F0Y2hQaHAgPSAnLi8qKi8qLnBocCc7XG5cbi8vID4+Pj4+IFppcCBmaWxlIGNvbmZpZy5cbi8vIE11c3QgaGF2ZS56aXAgYXQgdGhlIGVuZC5cbmNvbnN0IHppcE5hbWUgPSAndGhlbWUuemlwJztcblxuLy8gTXVzdCBiZSBhIGZvbGRlciBvdXRzaWRlIG9mIHRoZSB6aXAgZm9sZGVyLlxuY29uc3QgemlwRGVzdGluYXRpb24gPSAnLi8uLi8nOyAvLyBEZWZhdWx0OiBQYXJlbnQgZm9sZGVyLlxuY29uc3QgemlwSW5jbHVkZUdsb2IgPSBbJy4vKiovKiddOyAvLyBEZWZhdWx0OiBJbmNsdWRlIGFsbCBmaWxlcy9mb2xkZXJzIGluIGN1cnJlbnQgZGlyZWN0b3J5LlxuXG4vLyBEZWZhdWx0IGlnbm9yZWQgZmlsZXMgYW5kIGZvbGRlcnMgZm9yIHRoZSB6aXAgZmlsZS5cbmNvbnN0IHppcElnbm9yZUdsb2IgPSBbXG5cdCchLi97bm9kZV9tb2R1bGVzLG5vZGVfbW9kdWxlcy8qKi8qfScsXG5cdCchLi8uZ2l0Jyxcblx0JyEuLy5zdm4nLFxuXHQnIS4vZ3VscGZpbGUuYmFiZWwuanMnLFxuXHQnIS4vd3BndWxwLmNvbmZpZy5qcycsXG5cdCchLi8uZXNsaW50cmMuanMnLFxuXHQnIS4vLmVzbGludGlnbm9yZScsXG5cdCchLi8uZWRpdG9yY29uZmlnJyxcblx0JyEuL3BocGNzLnhtbC5kaXN0Jyxcblx0JyEuL3ZzY29kZScsXG5cdCchLi9wYWNrYWdlLmpzb24nLFxuXHQnIS4vcGFja2FnZS1sb2NrLmpzb24nLFxuXHQnIS4vYXNzZXRzL2Nzcy8qKi8qJyxcblx0JyEuL2Fzc2V0cy9jc3MnLFxuXHQnIS4vYXNzZXRzL2ltZy9yYXcvKiovKicsXG5cdCchLi9hc3NldHMvaW1nL3JhdycsXG5cdGAhJHtpbWdTUkN9YCxcblx0YCEke3N0eWxlU1JDfWAsXG5cdGAhJHtqc0N1c3RvbVNSQ31gLFxuXHRgISR7anNWZW5kb3JTUkN9YFxuXTtcblxuLy8gPj4+Pj4gVHJhbnNsYXRpb24gb3B0aW9ucy5cbi8vIFlvdXIgdGV4dCBkb21haW4gaGVyZS5cbmNvbnN0IHRleHREb21haW4gPSAnV1BHVUxQJztcblxuLy8gTmFtZSBvZiB0aGUgdHJhbnNsYXRpb24gZmlsZS5cbmNvbnN0IHRyYW5zbGF0aW9uRmlsZSA9ICdXUEdVTFAucG90JztcblxuLy8gV2hlcmUgdG8gc2F2ZSB0aGUgdHJhbnNsYXRpb24gZmlsZXMuXG5jb25zdCB0cmFuc2xhdGlvbkRlc3RpbmF0aW9uID0gJy4vbGFuZ3VhZ2VzJztcblxuLy8gUGFja2FnZSBuYW1lLlxuY29uc3QgcGFja2FnZU5hbWUgPSAnV1BHVUxQJztcblxuLy8gV2hlcmUgY2FuIHVzZXJzIHJlcG9ydCBidWdzLlxuY29uc3QgYnVnUmVwb3J0ID0gJ2h0dHBzOi8vQWhtYWRBd2Fpcy5jb20vY29udGFjdC8nO1xuXG4vLyBMYXN0IHRyYW5zbGF0b3IgRW1haWwgSUQuXG5jb25zdCBsYXN0VHJhbnNsYXRvciA9ICdBaG1hZCBBd2FpcyA8eW91cl9lbWFpbEBlbWFpbC5jb20+JztcblxuLy8gVGVhbSdzIEVtYWlsIElELlxuY29uc3QgdGVhbSA9ICdBaG1hZEF3YWlzIDx5b3VyX2VtYWlsQGVtYWlsLmNvbT4nO1xuXG4vLyBCcm93c2VycyB5b3UgY2FyZSBhYm91dCBmb3IgYXV0by1wcmVmaXhpbmcuIEJyb3dzZXJsaXN0IGh0dHBzOi8vZ2l0aHViLmNvbS9haS9icm93c2Vyc2xpc3Rcbi8vIFRoZSBmb2xsb3dpbmcgbGlzdCBpcyBzZXQgYXMgcGVyIFdvcmRQcmVzcyByZXF1aXJlbWVudHMuIFRob3VnaDsgRmVlbCBmcmVlIHRvIGNoYW5nZS5cbmNvbnN0IEJST1dTRVJTX0xJU1QgPSBbJ2xhc3QgMiB2ZXJzaW9uJywgJz4gMSUnXTtcblxuLy8gRXhwb3J0LlxubW9kdWxlLmV4cG9ydHMgPSB7XG5cdHByb2plY3RVUkwsXG5cdHByb2R1Y3RVUkwsXG5cdGJyb3dzZXJBdXRvT3Blbixcblx0aW5qZWN0Q2hhbmdlcyxcblx0c3R5bGVTUkMsXG5cdHN0eWxlRGVzdGluYXRpb24sXG5cdG91dHB1dFN0eWxlLFxuXHRlcnJMb2dUb0NvbnNvbGUsXG5cdHByZWNpc2lvbixcblx0anNWZW5kb3JTUkMsXG5cdGpzVmVuZG9yRGVzdGluYXRpb24sXG5cdGpzVmVuZG9yRmlsZSxcblx0anNDdXN0b21TUkMsXG5cdGpzQ3VzdG9tRGVzdGluYXRpb24sXG5cdGpzQ3VzdG9tRmlsZSxcblx0aW1nU1JDLFxuXHRpbWdEU1QsXG5cdHdhdGNoU3R5bGVzLFxuXHR3YXRjaEpzVmVuZG9yLFxuXHR3YXRjaEpzQ3VzdG9tLFxuXHR3YXRjaFBocCxcblx0emlwTmFtZSxcblx0emlwRGVzdGluYXRpb24sXG5cdHppcEluY2x1ZGVHbG9iLFxuXHR6aXBJZ25vcmVHbG9iLFxuXHR0ZXh0RG9tYWluLFxuXHR0cmFuc2xhdGlvbkZpbGUsXG5cdHRyYW5zbGF0aW9uRGVzdGluYXRpb24sXG5cdHBhY2thZ2VOYW1lLFxuXHRidWdSZXBvcnQsXG5cdGxhc3RUcmFuc2xhdG9yLFxuXHR0ZWFtLFxuXHRCUk9XU0VSU19MSVNUXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "wpgulp.config.js"
      ],
      "names": [
        "projectURL",
        "productURL",
        "browserAutoOpen",
        "injectChanges",
        "styleSRC",
        "styleDestination",
        "outputStyle",
        "errLogToConsole",
        "precision",
        "jsVendorSRC",
        "jsVendorDestination",
        "jsVendorFile",
        "jsCustomSRC",
        "jsCustomDestination",
        "jsCustomFile",
        "imgSRC",
        "imgDST",
        "watchStyles",
        "watchJsVendor",
        "watchJsCustom",
        "watchPhp",
        "zipName",
        "zipDestination",
        "zipIncludeGlob",
        "zipIgnoreGlob",
        "textDomain",
        "translationFile",
        "translationDestination",
        "packageName",
        "bugReport",
        "lastTranslator",
        "team",
        "BROWSERS_LIST",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/shawnstom/Local Sites/catch-fire/app/public/wp-content/themes/catch-fire/",
      "sourcesContent": [
        "/**\n * WPGulp Configuration File\n *\n * 1. Edit the variables as per your project requirements.\n * 2. In paths you can add <<glob or array of globs>>.\n *\n * @package WPGulp\n */\n\n// Project options.\n\n// Local project URL of your already running WordPress site.\n// > Could be something like \"wpgulp.local\" or \"localhost\"\n// > depending upon your local WordPress setup.\nconst projectURL = 'localhost:10033';\n\n// Theme/Plugin URL. Leave it like it is; since our gulpfile.js lives in the root folder.\nconst productURL = './';\nconst browserAutoOpen = false;\nconst injectChanges = true;\n\n// >>>>> Style options.\n// Path to main .scss file.\nconst styleSRC = './scss/main.scss';\n\n// Path to place the compiled CSS file. Default set to root folder.\nconst styleDestination = './css/';\n\n// Available options → 'compact' or 'compressed' or 'nested' or 'expanded'\nconst outputStyle = 'expanded';\nconst errLogToConsole = true;\nconst precision = 10;\n\n// JS Vendor options.\n\n// Path to JS vendor folder.\nconst jsVendorSRC = './assets/js/vendor/*.js';\n\n// Path to place the compiled JS vendors file.\nconst jsVendorDestination = './assets/js/';\n\n// Compiled JS vendors file name. Default set to vendors i.e. vendors.js.\nconst jsVendorFile = 'vendor';\n\n// JS Custom options.\n\n// Path to JS custom scripts folder.\nconst jsCustomSRC = './assets/js/custom/*.js';\n\n// Path to place the compiled JS custom scripts file.\nconst jsCustomDestination = './assets/js/';\n\n// Compiled JS custom file name. Default set to custom i.e. custom.js.\nconst jsCustomFile = 'custom';\n\n// Images options.\n\n// Source folder of images which should be optimized and watched.\n// > You can also specify types e.g. raw/**.{png,jpg,gif} in the glob.\nconst imgSRC = './assets/img/raw/**/*';\n\n// Destination folder of optimized images.\n// > Must be different from the imagesSRC folder.\nconst imgDST = './assets/img/';\n\n// >>>>> Watch files paths.\n// Path to all *.scss files inside css folder and inside them.\nconst watchStyles = './scss/**';\n\n// Path to all vendor JS files.\nconst watchJsVendor = './assets/js/vendor/*.js';\n\n// Path to all custom JS files.\nconst watchJsCustom = './assets/js/custom/*.js';\n\n// Path to all PHP files.\nconst watchPhp = './**/*.php';\n\n// >>>>> Zip file config.\n// Must have.zip at the end.\nconst zipName = 'theme.zip';\n\n// Must be a folder outside of the zip folder.\nconst zipDestination = './../'; // Default: Parent folder.\nconst zipIncludeGlob = ['./**/*']; // Default: Include all files/folders in current directory.\n\n// Default ignored files and folders for the zip file.\nconst zipIgnoreGlob = [\n\t'!./{node_modules,node_modules/**/*}',\n\t'!./.git',\n\t'!./.svn',\n\t'!./gulpfile.babel.js',\n\t'!./wpgulp.config.js',\n\t'!./.eslintrc.js',\n\t'!./.eslintignore',\n\t'!./.editorconfig',\n\t'!./phpcs.xml.dist',\n\t'!./vscode',\n\t'!./package.json',\n\t'!./package-lock.json',\n\t'!./assets/css/**/*',\n\t'!./assets/css',\n\t'!./assets/img/raw/**/*',\n\t'!./assets/img/raw',\n\t`!${imgSRC}`,\n\t`!${styleSRC}`,\n\t`!${jsCustomSRC}`,\n\t`!${jsVendorSRC}`\n];\n\n// >>>>> Translation options.\n// Your text domain here.\nconst textDomain = 'WPGULP';\n\n// Name of the translation file.\nconst translationFile = 'WPGULP.pot';\n\n// Where to save the translation files.\nconst translationDestination = './languages';\n\n// Package name.\nconst packageName = 'WPGULP';\n\n// Where can users report bugs.\nconst bugReport = 'https://AhmadAwais.com/contact/';\n\n// Last translator Email ID.\nconst lastTranslator = 'Ahmad Awais <your_email@email.com>';\n\n// Team's Email ID.\nconst team = 'AhmadAwais <your_email@email.com>';\n\n// Browsers you care about for auto-prefixing. Browserlist https://github.com/ai/browserslist\n// The following list is set as per WordPress requirements. Though; Feel free to change.\nconst BROWSERS_LIST = ['last 2 version', '> 1%'];\n\n// Export.\nmodule.exports = {\n\tprojectURL,\n\tproductURL,\n\tbrowserAutoOpen,\n\tinjectChanges,\n\tstyleSRC,\n\tstyleDestination,\n\toutputStyle,\n\terrLogToConsole,\n\tprecision,\n\tjsVendorSRC,\n\tjsVendorDestination,\n\tjsVendorFile,\n\tjsCustomSRC,\n\tjsCustomDestination,\n\tjsCustomFile,\n\timgSRC,\n\timgDST,\n\twatchStyles,\n\twatchJsVendor,\n\twatchJsCustom,\n\twatchPhp,\n\tzipName,\n\tzipDestination,\n\tzipIncludeGlob,\n\tzipIgnoreGlob,\n\ttextDomain,\n\ttranslationFile,\n\ttranslationDestination,\n\tpackageName,\n\tbugReport,\n\tlastTranslator,\n\tteam,\n\tBROWSERS_LIST\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1625765533281
  }
}